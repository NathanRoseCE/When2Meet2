import Schedule
import User

def runScheduleTests():
# TEST NUMBER ONE
    test = Schedule.Schedule("fdsrehreahrea", "Test Schedule")
    Nathan = User.User("gfdagreasgres", "Nathan")
    Abby = User.User("fhregbieragboahg", "Abby")
    Jackie = User.User("fhjewbOFEWBOBEW", "Jackie")
    Corrie = User.User("fdjsbfoiewnbgoap", "Corrie")
    Teja = User.User("fnejwbfpewhpewhp", "Teja")

    Nathan.changeAvailibility(0, 1)
    Nathan.changeAvailibility(0, 2)
    Nathan.changeAvailibility(0, 3)
    Nathan.changeAvailibility(0, 4)
    Nathan.changeAvailibility(0, 9)
    Nathan.changeAvailibility(0, 10)
    Nathan.changeAvailibility(0, 11)
    Nathan.changeAvailibility(0, 12)
    Nathan.changeAvailibility(1, 8)
    Nathan.changeAvailibility(1, 9)
    Nathan.changeAvailibility(1, 10)
    Nathan.changeAvailibility(1, 11)
    Nathan.changeAvailibility(2, 9)
    Nathan.changeAvailibility(2, 10)
    Nathan.changeAvailibility(2, 11)
    Nathan.changeAvailibility(2, 14)
    Nathan.changeAvailibility(2, 15)
    Nathan.changeAvailibility(2, 16)
    Nathan.changeAvailibility(3, 8)
    Nathan.changeAvailibility(3, 9)
    Nathan.changeAvailibility(4, 13)
    Nathan.changeAvailibility(4, 14)
    Nathan.changeAvailibility(4, 15)
    Nathan.changeAvailibility(4, 16)
    Nathan.changeAvailibility(5, 9)
    Nathan.changeAvailibility(5, 10)

    Teja.changeAvailibility(0, 2)
    Teja.changeAvailibility(0, 3)
    Teja.changeAvailibility(0, 4)
    Teja.changeAvailibility(0, 5)
    Teja.changeAvailibility(0, 6)
    Teja.changeAvailibility(0, 12)
    Teja.changeAvailibility(0, 12)
    Teja.changeAvailibility(0, 14)
    Teja.changeAvailibility(0, 15)
    Teja.changeAvailibility(1, 12)
    Teja.changeAvailibility(1, 13)
    Teja.changeAvailibility(1, 14)
    Teja.changeAvailibility(1, 15)
    Teja.changeAvailibility(2, 15)
    Teja.changeAvailibility(2, 16)
    Teja.changeAvailibility(2, 17)
    Teja.changeAvailibility(2, 18)
    Teja.changeAvailibility(2, 18)
    Teja.changeAvailibility(3, 8)
    Teja.changeAvailibility(3, 9)
    Teja.changeAvailibility(3, 10)
    Teja.changeAvailibility(3, 11)
    Teja.changeAvailibility(4, 2)
    Teja.changeAvailibility(4, 3)
    Teja.changeAvailibility(4, 4)
    Teja.changeAvailibility(4, 5)
    Teja.changeAvailibility(5, 4)
    Teja.changeAvailibility(5, 5)
    Teja.changeAvailibility(5, 6)
    Teja.changeAvailibility(5, 7)
    Teja.changeAvailibility(5, 8)
    Teja.changeAvailibility(5, 9)
    Teja.changeAvailibility(5, 10)

    Jackie.changeAvailibility(0, 0)
    Jackie.changeAvailibility(0, 1)
    Jackie.changeAvailibility(0, 2)
    Jackie.changeAvailibility(0, 3)
    Jackie.changeAvailibility(0, 14)
    Jackie.changeAvailibility(0, 15)
    Jackie.changeAvailibility(0, 16)
    Jackie.changeAvailibility(0, 17)
    Jackie.changeAvailibility(1, 12)
    Jackie.changeAvailibility(1, 13)
    Jackie.changeAvailibility(1, 14)
    Jackie.changeAvailibility(1, 15)
    Jackie.changeAvailibility(2, 7)
    Jackie.changeAvailibility(2, 8)
    Jackie.changeAvailibility(2, 9)
    Jackie.changeAvailibility(2, 10)
    Jackie.changeAvailibility(2, 20)
    Jackie.changeAvailibility(2, 21)
    Jackie.changeAvailibility(3, 18)
    Jackie.changeAvailibility(3, 19)
    Jackie.changeAvailibility(3, 20)
    Jackie.changeAvailibility(3, 21)
    Jackie.changeAvailibility(4, 15)
    Jackie.changeAvailibility(4, 16)
    Jackie.changeAvailibility(4, 17)
    Jackie.changeAvailibility(4, 18)
    Jackie.changeAvailibility(6, 3)
    Jackie.changeAvailibility(6, 4)
    Jackie.changeAvailibility(6, 5)
    Jackie.changeAvailibility(6, 6)

    Abby.changeAvailibility(0, 17)
    Abby.changeAvailibility(0, 18)
    Abby.changeAvailibility(0, 19)
    Abby.changeAvailibility(1, 10)
    Abby.changeAvailibility(1, 11)
    Abby.changeAvailibility(1, 12)
    Abby.changeAvailibility(1, 13)
    Abby.changeAvailibility(1, 14)
    Abby.changeAvailibility(1, 15)
    Abby.changeAvailibility(3, 12)
    Abby.changeAvailibility(3, 13)
    Abby.changeAvailibility(3, 14)
    Abby.changeAvailibility(3, 15)
    Abby.changeAvailibility(5, 9)
    Abby.changeAvailibility(5, 10)
    Abby.changeAvailibility(5, 11)
    Abby.changeAvailibility(5, 12)
    Abby.changeAvailibility(5, 13)

    Corrie.changeAvailibility(1, 8)
    Corrie.changeAvailibility(1, 9)
    Corrie.changeAvailibility(1, 10)
    Corrie.changeAvailibility(1, 11)
    Corrie.changeAvailibility(1, 12)
    Corrie.changeAvailibility(1, 13)
    Corrie.changeAvailibility(1, 14)
    Corrie.changeAvailibility(1, 15)
    Corrie.changeAvailibility(2, 12)
    Corrie.changeAvailibility(2, 13)
    Corrie.changeAvailibility(3, 16)
    Corrie.changeAvailibility(3, 17)
    Corrie.changeAvailibility(5, 9)
    Corrie.changeAvailibility(5, 10)
    print("Schedule Test 1")

    test.addMember(Nathan, True);
    test.addMember(Teja, False);
    test.addMember(Jackie, False);
    test.addMember(Abby, False);
    test.addMember(Corrie, False);

    print("Algorithm Solution")
    solution = test.determineBestMeetingTime()
    for time in solution:
        print(time.toString())

    print()
    test.calculateTimes()
    print(test.times)

# TEST NUMBER TWO
    test = Schedule.Schedule("fdsrehreahrea", "Test Schedule")
    Nathan = User.User("gfdagreasgres", "Nathan")
    Abby = User.User("fhregbieragboahg", "Abby")
    Jackie = User.User("fhjewbOFEWBOBEW", "Jackie")
    Corrie = User.User("fdjsbfoiewnbgoap", "Corrie")
    Teja = User.User("fnejwbfpewhpewhp", "Teja")

    Nathan.changeAvailibility(0, 0)
    Nathan.changeAvailibility(0, 1)
    Nathan.changeAvailibility(0, 10)
    Nathan.changeAvailibility(0, 11)
    Nathan.changeAvailibility(0, 15)
    Nathan.changeAvailibility(0, 16)

    Teja.changeAvailibility(0, 2)
    Teja.changeAvailibility(0, 3)
    Teja.changeAvailibility(0, 4)
    Teja.changeAvailibility(0, 5)
    Teja.changeAvailibility(0, 10)
    Teja.changeAvailibility(0, 11)

    Jackie.changeAvailibility(0, 2)
    Jackie.changeAvailibility(0, 3)
    Jackie.changeAvailibility(0, 4)
    Jackie.changeAvailibility(0, 5)

    Abby.changeAvailibility(0, 2)
    Abby.changeAvailibility(0, 3)
    Abby.changeAvailibility(0, 4)
    Abby.changeAvailibility(0, 5)
    Abby.changeAvailibility(0, 15)
    Abby.changeAvailibility(0, 16)

    Corrie.changeAvailibility(0, 0)
    Corrie.changeAvailibility(0, 1)
    Corrie.changeAvailibility(0, 2)
    Corrie.changeAvailibility(0, 3)
    Corrie.changeAvailibility(0, 10)
    Corrie.changeAvailibility(0, 11)
    Corrie.changeAvailibility(0, 15)
    Corrie.changeAvailibility(0, 16)
    print("Schedule Test 2")

    test.addMember(Nathan, True);
    test.addMember(Teja, False);
    test.addMember(Jackie, False);
    test.addMember(Abby, False);
    test.addMember(Corrie, True);

    print("Algorithm Solution")
    solution = test.determineBestMeetingTime()
    test.saveToFile("Test.csv")
    for time in solution:
        print(time.toString())

    print()
    test.calculateTimes()
    print(test.times)
# TEST NUMBER TWO
    test = Schedule.Schedule("fdsrehreahrea", "Test Schedule")
    Nathan = User.User("gfdagreasgres", "Nathan")
    Abby = User.User("fhregbieragboahg", "Abby")
    Jackie = User.User("fhjewbOFEWBOBEW", "Jackie")
    Corrie = User.User("fdjsbfoiewnbgoap", "Corrie")
    Teja = User.User("fnejwbfpewhpewhp", "Teja")

    Nathan.changeAvailibility(0, 3)
    Nathan.changeAvailibility(0, 4)
    Nathan.changeAvailibility(0, 6)
    Nathan.changeAvailibility(0, 7)
    Nathan.changeAvailibility(0, 9)
    Nathan.changeAvailibility(0, 10)
    Nathan.changeAvailibility(0, 12)
    Nathan.changeAvailibility(0, 13)

    Teja.changeAvailibility(0, 0)
    Teja.changeAvailibility(0, 1)
    Teja.changeAvailibility(0, 12)
    Teja.changeAvailibility(0, 13)

    Jackie.changeAvailibility(0, 0)
    Jackie.changeAvailibility(0, 1)
    Jackie.changeAvailibility(0, 6)
    Jackie.changeAvailibility(0, 7)

    Abby.changeAvailibility(0, 0)
    Abby.changeAvailibility(0, 1)
    Abby.changeAvailibility(0, 9)
    Abby.changeAvailibility(0, 10)

    Corrie.changeAvailibility(0, 0)
    Corrie.changeAvailibility(0, 1)
    Corrie.changeAvailibility(0, 3)
    Corrie.changeAvailibility(0, 4)
    print("Schedule Test 3")

    test.addMember(Nathan, True);
    test.addMember(Teja, False);
    test.addMember(Jackie, False);
    test.addMember(Abby, False);
    test.addMember(Corrie, False);

    print("Algorithm Solution")
    solution = test.determineBestMeetingTime()
    test.saveToFile("Test.csv")
    for time in solution:
        print(time.toString())

    print()
    test.calculateTimes()
    print(test.times)
runScheduleTests()